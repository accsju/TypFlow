const buildInObject = [
    "Array()",
    "from()",
    "fromAsync()",
    "Array.isArray()",
    "Array.of()",
    "Array.at()",
    "Array.concat()",
    "Array.copyWithin()",
    "Array.entries()",
    "Array.every()",
    "Array.fill()",
    "Array.filter()",
    "Array.find()",
    "Array.findIndex()",
    "Array.findLast()",
    "Array.findLastIndex()",
    "Array.flat()",
    "Array.flatMap()",
    "Array.forEach()",
    "Array.includes()",
    "Array.indexOf()",
    "Array.join()",
    "Array.keys()",
    "Array.lastIndexOf()",
    "Array.map()",
    "Array.pop()",
    "Array.push()",
    "Array.reduce()",
    "Array.reduceRight()",
    "Array.reverse()",
    "Array.shift()",
    "Array.slice()",
    "Array.some()",
    "Array.sort()",
    "Array.splice()",
    "Array.toLocaleString()",
    "Array.toReversed()",
    "Array.toSorted()",
    "Array.toSpliced()",
    "Array.toString()",
    "Array.unshift()",
    "Array.values()",
    "Array.with()",
    "length",
    "ArrayBuffer()",
    "ArrayBuffer.isView()",
    "ArrayBuffer.resize()",
    "ArrayBuffer.slice()",
    "ArrayBuffer.byteLength",
    "ArrayBuffer.maxByteLength",
    "ArrayBuffer.resizable",
    "AsyncGenerator.next()",
    "AsyncGenerator.return()",
    "AsyncGenerator.throw()",
    "Atomics.add()",
    "Atomics.and()",
    "Atomics.compareExchange()",
    "Atomics.exchange()",
    "Atomics.isLockFree()",
    "Atomics.load()",
    "Atomics.notify()",
    "Atomics.or()",
    "Atomics.pause()",
    "Atomics.store()",
    "Atomics.sub()",
    "Atomics.wait()",
    "Atomics.waitAsync()",
    "Atomics.xor()",
    "BigInt.asIntN()",
    "BigInt.asUintN()",
    "BigInt.toLocaleString()",
    "BigInt.toString()",
    "BigInt.valueOf()",
    "DataView.getBigInt64()",
    "DataView.getBigUint64()",
    "DataView.getFloat32()",
    "DataView.getFloat64()",
    "DataView.getInt8()",
    "DataView.getInt16()",
    "DataView.getInt32()",
    "DataView.getUint8()",
    "DataView.getUint16()",
    "DataView.getUint32()",
    "DataView.setBigInt64()",
    "DataView.setBigUint64()",
    "DataView.setFloat32()",
    "DataView.setFloat64()",
    "DataView.setInt8()",
    "DataView.setInt16()",
    "DataView.setInt32()",
    "DataView.setUint8()",
    "DataView.setUint16()",
    "DataView.setUint32()",
    "DataView.buffer()",
    "DataView.byteLength",
    "DataView.byteOffset",
    "Date.now()",
    "Date.parse()",
    "Date.UTC()",
    "Date.getDate()",
    "Date.getDay()",
    "Date.getFullYear()",
    "Date.getHours()",
    "Date.getMilliseconds()",
    "Date.getMinutes()",
    "Date.getMonth()",
    "Date.getSeconds()",
    "Date.getTime()",
    "Date.getTimezoneOffset()",
    "Date.getUTCDate()",
    "Date.getUTCDay()",
    "Date.getUTCFullYear()",
    "Date.getUTCHours()",
    "Date.getUTCMilliseconds()",
    "Date.getUTCMinutes()",
    "Date.getUTCMonth()",
    "Date.getUTCSeconds()",
    "Date.toDateString()",
    "Date.toISOString()",
    "Date.toJSON()",
    "Date.toLocaleDateString()",
    "Date.toLocaleString()",
    "Date.toLocaleTimeString()",
    "Date.toString()",
    "Date.toTimeString()",
    "Date.toUTCString()",
    "Date.valueOf()",
    "decodeURI()",
    "decodeURIComponent()",
    "encodeURI()",
    "encodeURIComponent()",
    "Error.captureStackTrace()",
    "Error.isError()",
    "Error.cause",
    "Error.message",
    "Error.name",
    "eval()",
    "EvalError",
    "FinalizationRegistry()",
    "FinalizationRegistry.register()",
    "FinalizationRegistry.unregister()",
    "Float16Array",
    "Float32Array",
    "Float64Array",
    "apply()",
    "bind()",
    "call()",
    "globalThis",
    "Infinity",
    "Int8Array",
    "Int16Array",
    "Int32Array",
    "Intl",
    "Intl.getCanonicalLocales()",
    "Intl.supportedValueOf()",
    "isFinite()",
    "isNaN()",
    "JSON.isRawJSON()",
    "JSON.parse()",
    "JSON.rawJSON()",
    "JSON.stringify()",
    "Map()",
    "Map.groupBy()",
    "Map.clear()",
    "Map.delete()",
    "Map.entries()",
    "Map.forEach()",
    "Map.get()",
    "Map.has()",
    "Map.keys()",
    "Map.set()",
    "Map.values()",
    "Map.size",
    "Math.abs()",
    "Math.acos()",
    "Math.acosh()",
    "Math.asin()",
    "Math.asinh()",
    "Math.atan()",
    "Math.atan2()",
    "Math.atanh()",
    "Math.cbrt()",
    "Math.ceil()",
    "Math.clz32()",
    "Math.cos()",
    "Math.cosh()",
    "Math.exp()",
    "Math.expm1()",
    "Math.f16round()",
    "Math.floor()",
    "Math.fround()",
    "Math.hypot()",
    "Math.imul()",
    "Math.log()",
    "Math.log1p()",
    "Math.log2()",
    "Math.log10()",
    "Math.max()",
    "Math.min()",
    "Math.pow()",
    "Math.random()",
    "Math.round()",
    "Math.sign()",
    "Math.sin()",
    "Math.sinh()",
    "Math.sqrt()",
    "Math.sumPrecise()",
    "Math.tan()",
    "Math.tanh()",
    "Math.trunc()",
    "Math.E",
    "Math.LN2",
    "Math.LN10",
    "Math.LOG2E",
    "Math.LOG10E",
    "Math.PI",
    "Math.SQRT_2",
    "Math.SQRT2",
    "NaN",
    "Number()",
    "isFinite()",
    "isInteger()",
    "isNaN()",
    "isSafeInteger()",
    "parseFloat()",
    "parseInt()",
    "EPSILON",
    "MAX_SAFE_INTEGER",
    "MAX_VALUE",
    "MIN_SAFE_INTEGER",
    "MIN_VALUE",
    "NEGATIVE_INFINITY",
    "POSITIVE_INFINITY",
    "toExponential()",
    "toFixed()",
    "toLocaleString()",
    "toPrecision()",
    "Object.assign()",
    "Object.create()",
    "Object.defineProperties()",
    "Object.defineProperty()",
    "Object.entries()",
    "Object.freeze()",
    "Object.fromEntries()",
    "Object.getOwnPropertyDescriptor()",
    "Object.getOwnPropertyDescriptors()",
    "Object.getOwnPropertyNames()",
    "Object.getOwnPropertySymbols()",
    "Object.getPrototypeOf()",
    "Object.groupBy()",
    "Object.hasOwn()",
    "Object.is()",
    "Object.isExtensible()",
    "Object.isFrozen()",
    "Object.isSealed()",
    "Object.keys()",
    "Object.preventExtensions()",
    "Object.seal()",
    "Object.setPrototypeOf()",
    "Object.values()",
    "Object.hasOwnProperty()",
    "Object.isPrototypeOf()",
    "Object.propertyIsEnumerable()",
    "Object.toLocaleString()",
    "Object.toString()",
    "parseFloat()",
    "parseInt()",
    "Promise.all()",
    "Promise.allSettled()",
    "Promise.any()",
    "Promise.race()",
    "Promise.reject()",
    "Promise.resolve()",
    "Promise.try()",
    "Promise.withResolvers()",
    "Promise.catch()",
    "Promise.finally()",
    "Promise.then()",
    "Proxy()",
    "Proxy.revocable()",
    "RangeError",
    "ReferenceError",
    "Reflect.apply()",
    "Reflect.construct()",
    "Reflect.defineProperty()",
    "Reflect.deleteProperty()",
    "Reflect.get()",
    "Reflect.getOwnPropertyDescriptor()",
    "Reflect.getPrototypeOf()",
    "Reflect.has()",
    "Reflect.isExtensible()",
    "Reflect.ownKeys()",
    "Reflect.preventExtensions()",
    "Reflect.set()",
    "Reflect.setPrototypeOf()",
    "RegExp.escape()",
    "RegExp.exec()",
    "RegExp.test()",
    "RegExp.lastIndex",
    "RegExp.dotAll",
    "RegExp.flags",
    "RegExp.global",
    "RegExp.hasIndices",
    "RegExp.ignoreCase",
    "RegExp.multiline",
    "RegExp.source",
    "RegExp.sticky",
    "RegExp.unicode",
    "RegExp.unicodeSets",
    "Set.add()",
    "Set.clear()",
    "Set.delete()",
    "Set.difference()",
    "Set.entries()",
    "Set.forEach()",
    "Set.has()",
    "Set.intersection()",
    "Set.isDisjointFrom()",
    "Set.isSubsetOf()",
    "Set.isSuperSetOf()",
    "Set.keys()",
    "Set.symmetricDifference()",
    "Set.union()",
    "Set.values()",
    "Set.size",
    "SharedArrayBuffer.grow()",
    "SharedArrayBuffer.slice()",
    "SharedArrayBuffer.byteLength",
    "SharedArrayBuffer.growable",
    "SharedArrayBuffer.maxByteLength",
    "String.fromCharCode()",
    "String.fromCodePoint()",
    "String.raw()",
    "String.at()",
    "String.charAt()",
    "String.charCodeAt()",
    "String.codePointAt()",
    "String.concat()",
    "String.endsWith()",
    "String.includes()",
    "String.indexOf()",
    "String.isWellFormed()",
    "String.lastIndexOf()",
    "String.localeCompare()",
    "String.match()",
    "String.matchAll()",
    "String.normalize()",
    "String.padEnd()",
    "String.padStart()",
    "String.repeat()",
    "String.replace()",
    "String.replaceAll()",
    "String.search()",
    "String.slice()",
    "String.split()",
    "String.startsWith()",
    "String.substring()",
    "String.toLocaleLowerCase()",
    "String.toLocaleUpperCase()",
    "String.toLowerCase()",
    "String.toUpperCase()",
    "String.toWellFormed()",
    "String.trim()",
    "String.trimEnd()",
    "String.trimStart()",
    "String.length",
    "Symbol.for()",
    "Symbol.keyFor()",
    "Symbol.asyncIterator",
    "Symbol.dispose",
    "Symbol.hasInstance",
    "Symbol.isConcatSpreadable",
    "Symbol.iterator",
    "Symbol.match",
    "Symbol.matchAll",
    "Symbol.replace",
    "Symbol.search",
    "Symbol.species",
    "Symbol.split",
    "Symbol.toPrimitive",
    "Symbol.toStringTag",
    "SyntaxError",
    "TypedArray.from()",
    "TypedArray.of()",
    "TypedArray.BYTES_PER_ELEMENT",
    "TypedArray.at()",
    "TypedArray.copyWithin()",
    "TypedArray.entries()",
    "TypedArray.every()",
    "TypedArray.fill()",
    "TypedArray.filter()",
    "TypedArray.find()",
    "TypedArray.findIndex()",
    "TypedArray.findLast()",
    "TypedArray.findLastIndex()",
    "TypedArray.forEach()",
    "TypedArray.includes()",
    "TypedArray.indexOf()",
    "TypedArray.join()",
    "TypedArray.keys()",
    "TypedArray.lastIndexOf()",
    "TypedArray.map()",
    "TypedArray.reduce()",
    "TypedArray.reduceRight()",
    "TypedArray.reverse()",
    "TypedArray.set()",
    "TypedArray.slice()",
    "TypedArray.some()",
    "TypedArray.sort()",
    "TypedArray.subarray()",
    "TypedArray.toLocaleString()",
    "TypedArray.toReversed()",
    "TypedArray.toSorted()",
    "TypedArray.with()",
    "TypedArray.buffer",
    "TypedArray.byteLength",
    "TypedArray.byteOffset",
    "TypedArray.length",
    "TypeError",
    "Uint8Array",
    "Uint8Array.fromBase64()",
    "Uint8Array.fromHex()",
    "Uint8Array.setFromBase64()",
    "Uint8Array.setFromHex()",
    "Uint8Array.toBase64()",
    "Uint8Array.toHex()",
    "Uint8ClampedArray",
    "Uint16Array",
    "Uint32Array",
    "undefined",
    "URIError",
    "WeakMap.delete()",
    "WeakMap.get()",
    "WeakMap.has()",
    "WeakMap.set()",
    "WeakRef.deref()",
    "WeakSet.add()",
    "WeakSet.delete()",
    "WeakSet.has()"
];

export default buildInObject;